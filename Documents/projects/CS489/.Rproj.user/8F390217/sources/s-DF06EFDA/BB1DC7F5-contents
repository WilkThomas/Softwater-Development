---
title: "HW1"
author: "Danielle Caesar"
date: "8/31/2020"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## plot.default {graphics}
This function of visualizing date in intuitive and will create a scatter plot. There are a variety of specific arguments that can be set to achieve the desired output. 

## plot.hexbin {hexbin}
This function creates hexagonal binning on the object.  It will create a two-dimensional density chart that helps to visualize the data.  It formats the counts in to hexagonal objects.  It also will display a legend showing the count representation.


There are several differences between the two types of plots.  One difference is the use of color in the hexbin plot.  The color is used to indicate the count. It is easier for the eye to discern the different density counts because of the obvious color difference.  In the default plot, the count density is indicated by a shading.  It is difficult to distinguish the shades of gray in the default plot.  Another notable difference is the use of a counts legend. The hexbin chart provides a count legend which makes the data easier to dicipher.A third difference between the two plots is the presence of white space surrounding the data.  The default plot includes empty space surrounding the data.  The hexbin plots are more focused and eliminate the areas where no data is present.  My preference is for the hexbin chart due to its visual readability and focused data.

## Dataset--Genes:8,744  cell IDs:3,531
```{r}
d <- read.table("GSM4209275_10X_SCRNASEQ_WT_EA_AGGR.tsv.gz", header = TRUE)
d[2:5, 200:205]
```

## Plots

```{r}
plot.default (x = d[1,], y = d[30,], xlab = "128up", ylab = "AIMP2")
plot.default (x = d[1,], y = d[35,], xlab = "128up", ylab = "AOX1")
plot.default( x = d[1,], y = d[40,], xlab = "128up", ylab = "Ap-1sigma")
plot.default (x = d[10,], y = d[30,], xlab = "2mit", ylab = "AIMP2")
plot.default (x = d[10,], y = d[35,], xlab = "2mit", ylab = "AOX1")
plot.default( x = d[10,], y = d[40,], xlab = "2mit", ylab = "Ap-1sigma")
plot.default (x = d[15,], y = d[30,], xlab = "5-HT7", ylab = "AIMP2")
plot.default (x = d[15,], y = d[35,], xlab = "5-HT7", ylab = "AOX1")
plot.default( x = d[15,], y = d[40,], xlab = "5-HT7", ylab = "Ap-1sigma")
```

```{r echo=FALSE}
library(hexbin)
x<- hexbin(x = d[1,], y = d[30,])
y<- hexbin(x = d[1, ], y = d[35,])
z<- hexbin(x = d[1,], y = d[40,])
a<- hexbin(x = d[10,], y = d[30,])
b<- hexbin(x = d[10, ], y = d[35,])
c<- hexbin(x = d[10,], y = d[40,])
q<- hexbin(x = d[15,], y = d[30,])
r<- hexbin(x = d[15, ], y = d[35,])
s<- hexbin(x = d[15,], y = d[40,])
```

```{r}
gplot.hexbin(x, xlab = "128up", ylab = "AIMP2", colramp = heat.ob)
gplot.hexbin(y, xlab = "128up", ylab = "AOX1", colramp = heat.ob)
gplot.hexbin(z, xlab = "128up", ylab = "AP-1sigma", colramp = heat.ob)

gplot.hexbin(a, xlab = "2mit", ylab = "AIMP2", colramp = heat.ob)
gplot.hexbin(b, xlab = "2mit", ylab = "AOX1", colramp = heat.ob)
gplot.hexbin(c, xlab = "2mit", ylab = "AP-1sigma", colramp = heat.ob)

gplot.hexbin(q, xlab = "5-HT7", ylab = "AIMP2", colramp = heat.ob)
gplot.hexbin(r, xlab = "5-HT7", ylab = "AOX1", colramp = heat.ob)
gplot.hexbin(s, xlab = "5-HT7", ylab = "AP-1sigma", colramp = heat.ob)

```