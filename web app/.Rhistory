shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data <- read.csv("USGSPWDBv2.3n.csv")
runApp()
library(shiny)
library(gglot2)
library(ggplot2)
library(dplyr)
runApp()
test <- subset(data, BASIN == 'Permian', c("BASIN", "TDS", "DATESAMPLE"))
View(test)
test$DATESAMPLE <- format(as.Date(test$DATESAMPLE, format = "%Y/%m/%d"), %Y)
format(as.Date(test$DATESAMPLE, format = "%Y/%m/%d"), %Y)
format(as.Date(test$DATESAMPLE, format="%Y/%m/%d"), %Y)
test <- format(as.Date(test$DATESAMPLE, format="%Y/%m/%d"), %Y)
test$DATESAMPLE <- as.numeric(format(test$DATESAMPLE, '%Y'))
head(test)
str(test)
test$DATESAMPLE <- format(as.Date(test$DATESAMPLE), '%Y-%m-%d')
test$DATESAMPLE <- format(as.Date(test$DATESAMPLE), '%Y-%m-%d', '%Y')
test$DATESAMPLE <- format(as.Date(test$DATESAMPLE, '%Y-%m-%d'), '%Y')
final <- test[complete.cases(test),]
View(final)
final <- final[order(DATESAMPLE),]
final <- final[order(final$DATESAMPLE),]
final <- final[, sum(TDS), by = DATESAMPLE]
final <- final[, sum(final$TDS), by = final$DATESAMPLE]
final <- aggregate(final['TDS'], by=final['DATESAMPLE'], sum)
ggplot(final)
ggplot(final) + barplot()
ggplot(final, aes(DATESAMPLE, TDS)) + barplot()
ggplot2.barplot(data = final)
library(devtools)
install.packages('devtools')
install.packages("devtools")
library(devtools)
library(easyGgplot2)
ggplot(data = final, aes(x = DATESAMPLE, y = TDS)) + geom_col()
ggplot(data = final, aes(x = DATESAMPLE, y = TDS)) + geom_bar()
ggplot(data = final, aes(x = DATESAMPLE, y = TDS)) + geom_col() + ggtitle("Permian Basin") + xlab("Year") + ylab("TDS")
ggplot(data = final, aes(x = DATESAMPLE, y = TDS)) + geom_col() + ggtitle("Permian Basin") + xlab("Year") + ylab("TDS") + scale_x_continuous(name = "TDS", limits = c(0, 500,000))
ggplot(data = final, aes(x = DATESAMPLE, y = TDS)) + geom_col() + ggtitle("Permian Basin") + xlab("Year") + ylab("TDS") + scale_y_continuous(limits = c(0, 1000))
ggplot(data = final, aes(x = DATESAMPLE, y = TDS)) + geom_col() + ggtitle("Permian Basin") + xlab("Year") + ylab("TDS") + scale_y_continuous(limits = c(0, 100000))
ggplot(data = final, aes(x = DATESAMPLE, y = TDS)) + geom_col() + ggtitle("Permian Basin") + xlab("Year") + ylab("TDS") + scale_y_continuous(limits = c(0, 500000))
ggplot(data = final, aes(x = DATESAMPLE, y = TDS)) + geom_col() + ggtitle("Permian Basin") + xlab("Year") + ylab("TDS")
ggplot(data = final, aes(x = DATESAMPLE, y = TDS)) + geom_col() + ggtitle("Permian Basin") + xlab("Year") + ylab("TDS") + scale_x_continuous(limits = c(1905, 1955))
ggplot(data = final, aes(x = DATESAMPLE, y = TDS)) + geom_col() + ggtitle("Permian Basin") + xlab("Year") + ylab("TDS")
ggplot(data = final, aes(x = DATESAMPLE, y = TDS)) + geom_col(fill = "dark blue") + ggtitle("Permian Basin") + xlab("Year") + ylab("TDS")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
test <- data %>% filter(BASIN == 'Permian') %>% filter(DATESAMPLE %in% 2000, 2014)
test <- data %>% filter(BASIN == 'Permian') %>% filter(DATESAMPLE %in% c(2000, 2014))
View(test)
test <- data %>% filter(BASIN == Permian)
install.packages(dplyr)
library(tidyverse)
test <- data %>% filter(BASIN == Permian)
test <- data %>% filter(BASIN == 'Permian')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
date_list <- list(test$DATESAMPLE)
runApp()
test$DATESAMPLE <- format(as.Date(test$DATESAMPLE, '%Y-%m-%d'), '%Y')
date_list <- list(test$DATESAMPLE)
filtered <- aggregate(input$select_query, FUN = sum, by = date_list)
filtered <- aggregate(TDS, FUN = sum, by = date_list)
filtered <- aggregate(filtered$TDS, FUN = sum, by = date_list)
filtered <- aggregate(test$TDS, FUN = sum, by = date_list)
View(filtered)
View(filtered)
View(test)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
colnames(filtered)
runApp()
colnames(filtered)
columns <- colnames(filtered)
columns[,2]
columns[,1]
columns[2,]
columns[2]
y-value <- columns[2]
y <- columns[2]
y
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(test)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
