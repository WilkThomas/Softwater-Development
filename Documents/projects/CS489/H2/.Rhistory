filename = "GSM4209275_10X_SCRNASEQ_WT_EA_AGGR.tsv.gz"
d <- read.table(filename, header = FALSE, comment.char = "#")
filename = "gencode.v35.annotation.gff3.gz"
d <- read.table(filename, header = FALSE, comment.char = "#")
colnames(d, "seqid", "source", "type", "start", "end", "score", "strand", "phase", "attributes")
colnames(d) <- c("seqid", "source", "type", "start", "end", "score", "strand", "phase", "attributes")
test <- filter(d, "type" = "gene")
test <- filter(d, type = "gene")
test <- filter(d, type %in% c("gene"))
test[5:10, 1:5]
test <- filter(d[1:500], type %in% c("gene"))
test <- filter(d[1:500,], type %in% c("gene"))
test <- filter(d, type %in% 'gene')
example("plot")
type <- d$type
type
gene <- type == "gene"
gne
gene
gene <- (type == "gene") == TRUE
gene
gene1 <- (type == "gene") == TRUE
gene1
gene <- gene == TRUE
gene
gene2 <- filter(gene, gene == "TRUE")
gene2
gene2 <- filter(gene, gene == 1)
gene2
table <- c(d[,1], d[,3])
table
genes <- d[d$type == "gene",]
genes
genes[1:10, 1:5]
barplot(genes, x = genes$seqid, y = count(genes$type))
barplot(genes, x = genes$seqid, y = genes$type)
barplot(genes)
barplot(d(d$type == "gene,"))
barplot(d(d$type))
)
barplot(genes(genes$type))
)
barplot(genes(genes$type))
barplot(table(d$type == "gene"))
library(dplyr)
set.seed(1)
dat <- genes
dat %>%
group_by(seqid) %>%
summarise(no_rows = length(seqid))
text <- dat %>%
group_by(seqid) %>%
summarise(no_rows = length(seqid))
text
barplot(text)
plot.default(text)
barplot.default(text)
values <- c(text[,1:25])
ggplot(text)
library(ggplot)
library(ggplot2)
ggplot(text)
ggplot(text)
ggplot(data = text)
ggplot(data = text)
t <- data.frame(text)
ggplot(t)
plot.default(t)
barplot.default(t)
data.matrix(t)
barplot(data.matrix(t))
data.matrix(t[1:2])
data.matrix(a = t[1:25, 1], b = t[1:25,2] )
data.matrix(t[1:25])
data.matrix(t[1:25, 1:2])
barplot(data.matrix(t[1:25, 1:2]))
filename = "gencode.v35.annotation.gff3.gz"
gff3 <- read.table(filename, header = FALSE, sep = "\t", stringsAsFactors = FALSE, col.names = c("seqid", "source", "type", "start", "end", "score", "strand", "phase", "tag"))
library(dplyr)
counts <- data %>% count(seqid, type)
library(ggplot2)
counts <- data %>% count(seqid, type)
View(gff3)
gff3[1:3, (3,9)]
gff3[1:3, 3:9]
gff3[1:3, 9]
install packages("bioconductor")
library(BiocManager)
install packages("bioconductor")
library(BiocVersion)
detach("package:BiocVersion", unload = TRUE)
tags <- c(gff3$tag)
patterns <- c("gene_name = (^;]*")
for(pattern in patterns) {
matched <-regexec(pattern, tags)
values <- regmatches(tags, matched)
}
for(pattern in patterns) {
matched <-regexec(pattern, tags)
values <- regmatches(tags, matched)
}
? regexec
patterns <- c("gene_name = (^;]*"))
patterns <- c("gene_name = ([^;]*)")
for(pattern in patterns) {
matched <-regexec(pattern, tags)
values <- regmatches(tags, matched)
}
View(values)
print(values[1])
print(values[[1]])
test_tags <- subset(tags[1:2,])\
test_tags <- subset(tags[1:2,])
test_tags <- subset(tags[1,])
test_tags <- subset(tags[1])
test_tags <- subset(tags(1))
tags[1]
values[1]
pattern <- "gene_name = ([^;]*)"
for(pattern in patterns) {
matched <-regexec(pattern, tags)
values <- regmatches(tags, matched)
}
View(values)
View(values)
print(values[[1]])
names(view)
names(values[[1]])
